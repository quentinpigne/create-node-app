import nconf from 'nconf';
{{> (headersPartial)}}

export default function (callback: (err?: Error | null) => void) {
  const port: number = nconf.get('NODE_PORT') as number;
  {{> (corePartial)}}

  {{#if fastifyFramework}}
  app
    .listen(port, (error: Error | null) => {
      if (error) {
        app.log.error(error)
        process.exit(1)
      }
      callback();
    });
  {{else}}
  {{#if noFramework}}server{{else}}app{{/if}}
    .listen(port, () => {
      logger.info(`[SERVER] Listening on port ${port}`);
      callback();
    })
    .on('error', function (error: Error & { code: string }) {
      if (error.code === 'EADDRINUSE') {
        logger.error(`[SERVER] Port ${port} is busy`);
      }
      callback(error);
    });
  {{/if}}
}
