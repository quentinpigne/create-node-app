import nconf from 'nconf';
{{> (headersPartial)}}

import logger from '../../lib/logger';
{{#if expressFramework}}

interface Error {
  name: string;
  message: string;
  status: number;
}
{{/if}}

export default function (callback: (err?: Error | null) => void) {
  const port: number = nconf.get('NODE_PORT');
  {{> (corePartial)}}

  {{#if noFramework}}server{{else}}app{{/if}}
    .listen(port, () => {
      logger.info(`[SERVER] Listening on port ${port}`);
      callback();
    })
    .on('error', function (error: Error & { code: string }) {
      if (error.code === 'EADDRINUSE') {
        logger.error(`[SERVER] Port ${port} is busy`);
      }
      callback(error);
    });
}
