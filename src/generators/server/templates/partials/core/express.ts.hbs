const app: express.Application = express();

app.use(cors());
{{#if pinoLogger}}
app.use(httpLogger);
{{/if}}
app.use(morgan('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));
{{#if routing}}

app.use(nconf.get('api:prefix') as string, routes());
{{/if}}
{{#if serveStatic}}

app.use(express.static(path.resolve(__dirname, '../../public')));
{{/if}}
{{#if monitoring}}

// eslint-disable-next-line @typescript-eslint/no-misused-promises
app.use('/metrics', async (req: Request, res: Response) => {
  const metrics: string = await register.metrics();
  res.type('text/plain');
  res.send(metrics);
});
{{/if}}

// Catch 404 and forward to error handler
app.use((req: Request, res: Response, next: NextFunction) => {
  next({ message: 'Not Found', status: 404 });
});

// Error handlers
app.use((err: Error, req: Request, res: Response, next: NextFunction) => {
  /**
   * Handle 401 thrown by express-jwt library
   */
  if (err.name === 'UnauthorizedError') {
    return res.status(err.status).send({ message: err.message }).end();
  }
  return next(err);
});

app.use(function (err: Error, req: Request, res: Response) {
  res.status(err.status || 500);
  res.json({
    message: err.message,
    error: app.get('env') === 'development' ? err : {},
  });
});
